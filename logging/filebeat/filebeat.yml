# Filebeat 메인 설정 파일
# 용도: 다양한 소스의 로그를 수집하여 Logstash로 전송

# 일반 설정
name: "online-evaluation-filebeat"
tags: ["online-evaluation", "production"]

# 로그 입력 설정
filebeat.inputs:

# 1. 애플리케이션 로그 수집
- type: log
  enabled: true
  id: app-logs
  paths:
    - /var/log/app/*.log
    - /var/log/app/**/*.log
    - /app/logs/*.log
  
  # JSON 로그 파싱
  json.keys_under_root: true
  json.add_error_key: true
  json.message_key: message
  
  # 필드 추가
  fields:
    log_type: application
    service: online-evaluation
    environment: ${ENVIRONMENT:development}
  fields_under_root: false
  
  # 멀티라인 처리 (스택 트레이스)
  multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
  multiline.negate: true
  multiline.match: after
  multiline.max_lines: 500
  multiline.timeout: 5s
  
  # 파일 스캔 설정
  scan_frequency: 10s
  harvester_buffer_size: 16384
  max_bytes: 10485760  # 10MB
  
  # 제외 패턴
  exclude_lines: ['^DEBUG', '^TRACE']
  include_lines: ['^(INFO|WARN|ERROR|FATAL)']

# 2. Nginx 액세스 로그 수집  
- type: log
  enabled: true
  id: nginx-access-logs
  paths:
    - /var/log/nginx/access.log
    - /var/log/nginx/*_access.log
  
  # 필드 추가
  fields:
    log_type: nginx_access
    service: nginx
    environment: ${ENVIRONMENT:development}
  fields_under_root: false
  
  # 파일 설정
  scan_frequency: 5s
  harvester_buffer_size: 16384
  
  # 제외 패턴 (헬스체크 등)
  exclude_lines: ['/health', '/metrics', '/favicon.ico']

# 3. Nginx 에러 로그 수집
- type: log
  enabled: true
  id: nginx-error-logs
  paths:
    - /var/log/nginx/error.log
    - /var/log/nginx/*_error.log
  
  # 필드 추가
  fields:
    log_type: nginx_error
    service: nginx
    environment: ${ENVIRONMENT:development}
  fields_under_root: false
  
  # 멀티라인 처리
  multiline.pattern: '^[0-9]{4}/[0-9]{2}/[0-9]{2}'
  multiline.negate: true
  multiline.match: after
  multiline.max_lines: 100

# 4. Docker 컨테이너 로그 수집
- type: container
  enabled: true
  id: docker-logs
  paths:
    - /var/lib/docker/containers/*/*.log
  
  # 필드 추가
  fields:
    log_type: docker
    environment: ${ENVIRONMENT:development}
  fields_under_root: false
  
  # JSON 로그 파싱
  json.keys_under_root: true
  json.add_error_key: true
  
  # 컨테이너 메타데이터 추가
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"
        match_fields: ["container.id"]
        match_pids: ["process.pid"]
        match_source: true
        match_source_index: 4
        match_short_id: false
        cleanup_timeout: 60
        labels.dedot: false
        
    # 불필요한 필드 제거
    - drop_fields:
        fields: ["agent", "ecs.version", "host.architecture"]

# 5. 시스템 로그 수집 (선택적)
- type: log
  enabled: false  # 필요시 활성화
  id: system-logs
  paths:
    - /var/log/syslog
    - /var/log/messages
  
  fields:
    log_type: system
    service: system
    environment: ${ENVIRONMENT:development}
  fields_under_root: false

# 글로벌 프로세서
processors:
  # 타임스탬프 정규화
  - timestamp:
      field: "@timestamp"
      layouts:
        - '2006-01-02T15:04:05.000Z'
        - '2006-01-02 15:04:05'
        - 'Jan _2 15:04:05'
      test:
        - '2024-01-15T10:30:45.123Z'

  # 호스트 정보 추가
  - add_host_metadata:
      when.not.contains.tags: forwarded
      cache.ttl: 5m
      geo.name: datacenter
      geo.location: "40.7128, -74.0060"
      geo.continent_name: "North America"
      geo.country_iso_code: "US"

  # 일반적인 필드 정리
  - rename:
      fields:
        - from: "message"
          to: "log.message"
      ignore_missing: true
      fail_on_error: false

  # 민감한 정보 마스킹
  - dissect:
      tokenizer: "%{} password=%{password} %{}"
      field: "log.message"
      target_prefix: ""
  - drop_fields:
      fields: ["password"]
      ignore_missing: true

# 출력 설정 - Logstash로 전송
output.logstash:
  hosts: ["${LOGSTASH_HOST:logstash}:${LOGSTASH_PORT:5044}"]
  
  # 로드 밸런싱
  loadbalance: true
  worker: 2
  
  # 압축 사용
  compression_level: 3
  
  # 재연결 설정
  max_retries: 3
  backoff.init: 1s
  backoff.max: 60s
  timeout: 30s
  
  # TLS 설정 (프로덕션 환경)
  ssl.enabled: false
  # ssl.certificate_authorities: ["/etc/filebeat/certs/ca.crt"]
  # ssl.certificate: "/etc/filebeat/certs/filebeat.crt"
  # ssl.key: "/etc/filebeat/certs/filebeat.key"

# 로깅 설정
logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat.log
  keepfiles: 7
  permissions: 0644
  rotateeverybytes: 10485760  # 10MB

# 모니터링 설정
monitoring:
  enabled: true
  elasticsearch:
    hosts: ["${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}"]
    
# 레지스트리 설정
filebeat.registry.path: /usr/share/filebeat/data/registry
filebeat.registry.file_permissions: 0600
filebeat.registry.flush: 1s

# 큐 설정
queue.mem:
  events: 4096
  flush.min_events: 512
  flush.timeout: 1s

# 설정 리로드
filebeat.config:
  inputs:
    enabled: true
    path: /usr/share/filebeat/inputs.d/*.yml
    reload.enabled: true
    reload.period: 30s

# 보안 설정
seccomp.enabled: true

# 성능 최적화
max_procs: 2
filebeat.shutdown_timeout: 10s
