[tool:pytest]
# Pytest configuration for backend testing
testpaths = backend
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --cov=backend
    --cov-report=term-missing
    --cov-report=html:backend/htmlcov
    --cov-report=json:backend/coverage.json
    --json-report
    --json-report-file=backend/test_results.json
    --asyncio-mode=auto

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    auth: marks tests as authentication tests
    model: marks tests as model-related tests

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = backend
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod